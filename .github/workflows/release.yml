name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            generators: "Visual Studio 17 2022",
            artifact: "windows-msvc.zip"
          }
          - {
            name: "Ubuntu Latest GCC",
            os: ubuntu-latest,
            build_type: "Release",
            cc: "gcc-11",
            cxx: "g++-11",
            generators: "Ninja",
            artifact: "linux-gcc.tar.gz"
          }
          - {
            name: "macOS Latest Clang",
            os: macos-latest,
            build_type: "Release",
            cc: "clang",
            cxx: "clang++",
            generators: "Ninja",
            artifact: "macos-clang.tar.gz"
          }

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies (Ubuntu)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build gcc-11 g++-11

      - name: Install dependencies (macOS)
        if: matrix.config.os == 'macos-latest'
        run: |
          brew install ninja

      - name: Configure CMake
        run: |
          cmake -B ${{ github.workspace }}/build -G "${{ matrix.config.generators }}" -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DBUILD_TESTING=OFF
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.config.build_type }}

      - name: Package
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: |
          mkdir -p package
          if [[ "${{ matrix.config.os }}" == "windows-latest" ]]; then
            cp ${{ matrix.config.build_type }}/*.exe package/ || true
            cp ${{ matrix.config.build_type }}/*.dll package/ || true
            7z a ../${{ matrix.config.artifact }} package/
          else
            cp bin/* package/ || true
            cp lib/* package/ || true
            tar -czf ../${{ matrix.config.artifact }} package/
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ matrix.config.artifact }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}